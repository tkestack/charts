apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "opentelemetry-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller-manager
  name: {{ template "opentelemetry-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "opentelemetry-operator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      annotations:
        {{- if .Values.manager.rolling }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
        kubectl.kubernetes.io/default-container: manager
        {{- if .Values.manager.podAnnotations }}
        {{- include "opentelemetry-operator.podAnnotations" . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "opentelemetry-operator.selectorLabels" . | nindent 8 }}
        {{- if .Values.manager.podLabels }}
        {{- include "opentelemetry-operator.podLabels" . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: controller-manager
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      containers:
        - args:
            - --metrics-addr=0.0.0.0:{{ .Values.manager.ports.metricsPort }}
            {{- if .Values.manager.leaderElection.enabled }}
            - --enable-leader-election
            {{- end }}
            - --health-probe-addr=:{{ .Values.manager.ports.healthzPort }}
            {{- if or .Values.admissionWebhooks.create .Values.admissionWebhooks.secretName }}
            - --webhook-port={{ .Values.manager.ports.webhookPort }}
            {{- end }}
            {{- if and (include "opentelemetry-operator.managerCollectorImageRepository" .) .Values.manager.collectorImage.tag }}
            - --collector-image={{ include "opentelemetry-operator.managerCollectorImageRepository" . }}:{{ .Values.manager.collectorImage.tag }}
            {{- end }}
            {{- if and .Values.manager.targetAllocatorImage.repository .Values.manager.targetAllocatorImage.tag }}
            - --target-allocator-image={{ .Values.manager.targetAllocatorImage.repository }}:{{ .Values.manager.targetAllocatorImage.tag }}
            {{- end }}
            {{- if and .Values.manager.autoInstrumentationImage.java.repository .Values.manager.autoInstrumentationImage.java.tag }}
            - --auto-instrumentation-java-image={{ .Values.manager.autoInstrumentationImage.java.repository }}:{{ .Values.manager.autoInstrumentationImage.java.tag }}
            {{- end }}
            {{- if and .Values.manager.autoInstrumentationImage.nodejs.repository .Values.manager.autoInstrumentationImage.nodejs.tag }}
            - --auto-instrumentation-nodejs-image={{ .Values.manager.autoInstrumentationImage.nodejs.repository }}:{{ .Values.manager.autoInstrumentationImage.nodejs.tag }}
            {{- end }}
            {{- if and .Values.manager.autoInstrumentationImage.python.repository .Values.manager.autoInstrumentationImage.python.tag }}
            - --auto-instrumentation-python-image={{ .Values.manager.autoInstrumentationImage.python.repository }}:{{ .Values.manager.autoInstrumentationImage.python.tag }}
            {{- end }}
            {{- if and .Values.manager.autoInstrumentationImage.dotnet.repository .Values.manager.autoInstrumentationImage.dotnet.tag }}
            - --auto-instrumentation-dotnet-image={{ .Values.manager.autoInstrumentationImage.dotnet.repository }}:{{ .Values.manager.autoInstrumentationImage.dotnet.tag }}
            {{- end }}
            {{- if and .Values.manager.autoInstrumentationImage.go.repository .Values.manager.autoInstrumentationImage.go.tag }}
            - --auto-instrumentation-go-image={{ .Values.manager.autoInstrumentationImage.go.repository }}:{{ .Values.manager.autoInstrumentationImage.go.tag }}
            {{- end }}
            {{- if .Values.manager.featureGates }}
            - --feature-gates={{ .Values.manager.featureGates }}
            {{- end }}
            {{-  if .Values.manager.extraArgs  }}
            {{- .Values.manager.extraArgs | toYaml | nindent 12 }}
            {{-  end  }}
          command:
            - /manager
          {{- if .Values.manager.env }}
          env:
            {{- range $name, $value := .Values.manager.env }}
            - name: {{ $name }}
              value: {{ $value | quote -}}
            {{- end }}
            {{- if (eq .Values.env.FROM_INTERNET "true") }}
            - name: API_ENDPOINT
              value: "apm.tencentcloudapi.com"
            {{- end }}
            - name: TKE_CLUSTER_ID
              value: {{ .Values.env.TKE_CLUSTER_ID | quote }}
            - name: TKE_REGION
              value: {{ .Values.env.TKE_REGION | quote }}
            - name: APM_TOKEN
              value: {{ .Values.env.APM_TOKEN | quote }}
            - name: ENDPOINT
              value: {{ .Values.env.ENDPOINT | quote }}
            - name: JAVA_INSTR_VERSION
              value: {{ .Values.env.JAVA_INSTR_VERSION | quote }}
            - name: PYTHON_INSTR_VERSION
              value: {{ .Values.env.PYTHON_INSTR_VERSION | quote }}
            - name: DOTNET_INSTR_VERSION
              value: {{ .Values.env.DOTNET_INSTR_VERSION | quote }}
            - name: NODEJS_INSTR_VERSION
              value: {{ .Values.env.NODEJS_INSTR_VERSION | quote }}
            - name: INTL_SITE
              value: {{ .Values.env.INTL_SITE | quote }}
            - name: CONFIG_JAVA
              value: {{ .Values.config.java | quote }}
            - name: CONFIG_PYTHON
              value: {{ .Values.config.python | quote }}
            - name: CONFIG_DOTNET
              value: {{ .Values.config.dotnet | quote }}
            - name: CONFIG_NODEJS
              value: {{ .Values.config.nodejs | quote }}
            - name: OPERATOR_VERSION
              value: {{ .Values.manager.image.tag | quote }}
            - name: HELM_CHART_VERSION
              value: {{ .Chart.Version | quote }}
            - name: IMAGE_REPOSITORY
              value: {{ include "regionRepositoryMap" .Values.env.TKE_REGION | default (include "regionRepositoryMap" "ap-guangzhou") | quote }}
          {{- end }}
          image: "{{ include "opentelemetry-operator.managerImageRepository" . }}:{{ .Values.manager.image.tag }}"
          name: manager
          ports:
            - containerPort: {{ .Values.manager.ports.metricsPort }}
              name: metrics
              protocol: TCP
            {{- if or .Values.admissionWebhooks.create .Values.admissionWebhooks.secretName }}
            - containerPort: {{ .Values.manager.ports.webhookPort }}
              name: webhook-server
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.manager.ports.healthzPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.manager.ports.healthzPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources: {{ toYaml .Values.manager.resources | nindent 12 }}
          {{- if or .Values.admissionWebhooks.create .Values.admissionWebhooks.secretName }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- end }}
          {{- with .Values.manager.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{ if .Values.kubeRBACProxy.enabled }}
        - args:
            - --secure-listen-address=0.0.0.0:{{ .Values.kubeRBACProxy.ports.proxyPort }}
            - --upstream=http://127.0.0.1:{{ .Values.manager.ports.metricsPort }}/
            - --logtostderr=true
            - --v=0
            {{-  if .Values.kubeRBACProxy.extraArgs  }}
            {{- .Values.kubeRBACProxy.extraArgs | toYaml | nindent 12 }}
            {{-  end  }}
          image: "{{ include "opentelemetry-operator.proxyImageRepository" . }}:{{ .Values.kubeRBACProxy.image.tag }}"
          name: kube-rbac-proxy
          ports:
            - containerPort: {{ .Values.kubeRBACProxy.ports.proxyPort }}
              name: https
              protocol: TCP
          {{- with .Values.kubeRBACProxy.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.kubeRBACProxy.securityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "opentelemetry-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      {{- if or .Values.admissionWebhooks.create .Values.admissionWebhooks.secretName }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ default (printf "%s-controller-manager-service-cert" (include "opentelemetry-operator.fullname" .)) .Values.admissionWebhooks.secretName }}
      {{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
