
** Please be patient while the chart is being deployed **

1. Get the Tomcat URL by running:

{{- if .Values.ingress.enabled }}

export HOSTNAME=$(kubectl get ingress --namespace {{ .Release.Namespace }} {{ template "tomcat.fullname" . }} -o jsonpath='{.spec.rules[0].host}')
echo "Tomcat URL: http://$HOSTNAME/"

{{- else if contains "NodePort" .Values.service.type }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "tomcat.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/

{{- else if contains "LoadBalancer" .Values.service.type }}

** Please ensure an external IP is associated to the {{ template "tomcat.fullname" . }} service before proceeding **
** Watch the status using: kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "tomcat.fullname" . }} **

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "tomcat.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
{{- $port:=.Values.service.port | toString }}
  echo URL            : http://$SERVICE_IP{{- if ne $port "80" }}:{{ .Values.service.port }}{{ end }}/
  echo Management URL : http://$SERVICE_IP{{- if ne $port "80" }}:{{ .Values.service.port }}{{ end }}/manager
{{- else if contains "ClusterIP"  .Values.service.type }}
  echo URL            : http://127.0.0.1:8080/
  echo Management URL : http://127.0.0.1:8080/manager
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "tomcat.fullname" . }} 8080:{{ .Values.service.port }}
{{- end }}

2. Login with the following credentials

  echo Username: {{ .Values.tomcatUsername }}
  echo Password: $(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "tomcat.fullname" . }} -o jsonpath="{.data.tomcat-password}" | base64 --decode)

{{- if and (contains "bitnami/" .Values.image.repository) (not (.Values.image.tag | toString | regexFind "-r\\d+$|sha256:")) }}

WARNING: Rolling tag detected ({{ .Values.image.repository }}:{{ .Values.image.tag }}), please note that it is strongly recommended to avoid using rolling tags in a production environment.
+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/

{{- end }}
